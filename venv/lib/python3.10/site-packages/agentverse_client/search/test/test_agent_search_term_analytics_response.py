# coding: utf-8

"""
    FastAPI

    An API for our smart search engine that provides the agent that best fits your needs.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from agentverse_client.search.models.agent_search_term_analytics_response import AgentSearchTermAnalyticsResponse

class TestAgentSearchTermAnalyticsResponse(unittest.TestCase):
    """AgentSearchTermAnalyticsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentSearchTermAnalyticsResponse:
        """Test AgentSearchTermAnalyticsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentSearchTermAnalyticsResponse`
        """
        model = AgentSearchTermAnalyticsResponse()
        if include_optional:
            return AgentSearchTermAnalyticsResponse(
                address = '',
                term_percentages = [
                    agentverse_client.search.models.search_term_percentage.SearchTermPercentage(
                        term = '', 
                        last_24h_percentage = 0.0, 
                        last_7d_percentage = 0.0, 
                        last_30d_percentage = 0.0, )
                    ]
            )
        else:
            return AgentSearchTermAnalyticsResponse(
                address = '',
                term_percentages = [
                    agentverse_client.search.models.search_term_percentage.SearchTermPercentage(
                        term = '', 
                        last_24h_percentage = 0.0, 
                        last_7d_percentage = 0.0, 
                        last_30d_percentage = 0.0, )
                    ],
        )
        """

    def testAgentSearchTermAnalyticsResponse(self):
        """Test AgentSearchTermAnalyticsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
